buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.google.cloud.tools.jib' version '1.0.0'
    id 'nu.studer.jooq' version '3.0.3'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.nuxplanet.imperative'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile project(':common')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'

    implementation 'org.liquibase:liquibase-core'
    jooqRuntime 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    compile 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

bootRun {
    jvmArgs = ['-Xmx1024m']
}

jib {
    from {
        image = "openjdk:8-jdk-alpine"
    }
    to {
        image = "509029984649.dkr.ecr.eu-central-1.amazonaws.com/imperative"
    }
    container {
        jvmFlags = ['-Xmx1024m', '-Dserver.port=8081']
        ports = ['8081']
    }
}

jooq {
    version = '3.11.9'
    edition = 'OSS'
    sample(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/queue'
            user = 'queue'
            password = ''
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                includes = '.*'
                excludes = 'databasechangelog | databasechangeloglock'
                recordVersionFields = 'version'
            }
            target {
                packageName = 'com.nuxplanet.generated'
            }
        }
    }
}
